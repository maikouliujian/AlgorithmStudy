<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

<groupId>com.maikou.flink</groupId>
<artifactId>AlgorithmStudy</artifactId>
<version>1.0-SNAPSHOT</version>
    <name>flinkdemo</name>
    <!-- FIXME change it to the project's website -->
    <url>http://www.example.com</url>

    <repositories>
        <repository>
            <id>apache.snapshots</id>
            <name>Apache Development Snapshot Repository</name>
            <url>https://repository.apache.org/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <flink.version>1.6.1</flink.version>
        <scala.binary.version>2.11</scala.binary.version>
        <scala.version>2.11.12</scala.version>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
    </properties>

    <dependencies>
        <!-- Apache Flink dependencies -->
        <!-- These dependencies are provided, because they should not be packaged into the JAR file. -->
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-scala_${scala.binary.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
            <version>${flink.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Scala Library, provided by Flink as well. -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Add connector dependencies here. They must be in the default scope (compile). -->

        <dependency>
            <groupId>org.apache.flink</groupId>
            <artifactId>flink-connector-kafka-0.11_2.11</artifactId>
            <version>${flink.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>log4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Add logging framework, to produce console output when running in the IDE. -->
        <!-- These dependencies are excluded from the application JAR by default. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.7</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.websudos</groupId>
            <artifactId>phantom-dsl_2.11</artifactId>
            <version>1.28.16</version>
            <type>pom</type>
        </dependency>
    </dependencies>



    <!--<build>-->

        <!--&lt;!&ndash;scala待编译的文件目录&ndash;&gt;-->
        <!--<sourceDirectory>src/main/scala</sourceDirectory>-->
        <!--<testSourceDirectory>src/test/scala</testSourceDirectory>-->

        <!--&lt;!&ndash;包名&ndash;&gt;-->
        <!--<finalName>flink-demo_${project.version}_${maven.build.timestamp}</finalName>-->

        <!--&lt;!&ndash;配置文件路径&ndash;&gt;-->
        <!--<resources>-->
            <!--<resource>-->
                <!--<directory>${project.basedir}/src/main/resources</directory>-->
                <!--<includes>-->
                    <!--<include>*.properties</include>-->
                    <!--<include>*.xml</include>-->
                <!--</includes>-->
            <!--</resource>-->
        <!--</resources>-->
        <!--<plugins>-->
            <!--&lt;!&ndash; We use the maven-shade plugin to create a fat jar that contains all necessary dependencies. &ndash;&gt;-->
            <!--&lt;!&ndash; Change the value of <mainClass>...</mainClass> if your program entry point changes. &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-shade-plugin</artifactId>-->
                <!--<version>3.0.0</version>-->
                <!--<executions>-->
                    <!--&lt;!&ndash; Run shade goal on package phase &ndash;&gt;-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>shade</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<artifactSet>-->
                                <!--<excludes>-->
                                    <!--<exclude>org.apache.flink:force-shading</exclude>-->
                                    <!--<exclude>com.google.code.findbugs:jsr305</exclude>-->
                                    <!--<exclude>org.slf4j:*</exclude>-->
                                    <!--<exclude>log4j:*</exclude>-->
                                <!--</excludes>-->
                            <!--</artifactSet>-->
                            <!--<filters>-->
                                <!--<filter>-->
                                    <!--&lt;!&ndash; Do not copy the signatures in the META-INF folder.-->
                                    <!--Otherwise, this might cause SecurityExceptions when using the JAR. &ndash;&gt;-->
                                    <!--<artifact>*:*</artifact>-->
                                    <!--<excludes>-->
                                        <!--<exclude>META-INF/*.SF</exclude>-->
                                        <!--<exclude>META-INF/*.DSA</exclude>-->
                                        <!--<exclude>META-INF/*.RSA</exclude>-->
                                    <!--</excludes>-->
                                <!--</filter>-->
                            <!--</filters>-->
                            <!--<transformers>-->
                                <!--<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">-->
                                    <!--<mainClass>org.myorg.quickstart.StreamingJob</mainClass>-->
                                <!--</transformer>-->
                            <!--</transformers>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; Java Compiler &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-compiler-plugin</artifactId>-->
                <!--<version>3.1</version>-->
                <!--<configuration>-->
                    <!--<source>1.8</source>-->
                    <!--<target>1.8</target>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--&lt;!&ndash; Scala Compiler &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>net.alchim31.maven</groupId>-->
                <!--<artifactId>scala-maven-plugin</artifactId>-->
                <!--<version>3.2.2</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<goals>-->
                            <!--<goal>compile</goal>-->
                            <!--<goal>testCompile</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
        <!--</plugins>-->
    <!--</build>-->

    <!--<profiles>-->
        <!--&lt;!&ndash; This profile helps to make things run out of the box in IntelliJ &ndash;&gt;-->
        <!--&lt;!&ndash; Its adds Flink's core classes to the runtime class path. &ndash;&gt;-->
        <!--&lt;!&ndash; Otherwise they are missing in IntelliJ, because the dependency is 'provided' &ndash;&gt;-->
        <!--<profile>-->
            <!--<id>add-dependencies-for-IDEA</id>-->

            <!--<activation>-->
                <!--<property>-->
                    <!--<name>idea.version</name>-->
                <!--</property>-->
            <!--</activation>-->

            <!--<dependencies>-->
                <!--<dependency>-->
                    <!--<groupId>org.apache.flink</groupId>-->
                    <!--<artifactId>flink-scala_${scala.binary.version}</artifactId>-->
                    <!--<version>${flink.version}</version>-->
                    <!--<scope>compile</scope>-->
                <!--</dependency>-->
                <!--<dependency>-->
                    <!--<groupId>org.apache.flink</groupId>-->
                    <!--<artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>-->
                    <!--<version>${flink.version}</version>-->
                    <!--<scope>compile</scope>-->
                <!--</dependency>-->
                <!--<dependency>-->
                    <!--<groupId>org.scala-lang</groupId>-->
                    <!--<artifactId>scala-library</artifactId>-->
                    <!--<version>${scala.version}</version>-->
                    <!--<scope>compile</scope>-->
                <!--</dependency>-->
            <!--</dependencies>-->
        <!--</profile>-->
    <!--</profiles>-->
</project>